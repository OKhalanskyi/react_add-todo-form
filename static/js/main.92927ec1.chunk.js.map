{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/user.service.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","App","useState","visibleTodos","setVisibleTodos","setTitle","titleError","setTitleError","selectedUserId","setSelectedUserId","userIdError","setUserIdError","action","method","onSubmit","event","newTodo","preventDefault","Math","max","currentTodos","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92927ec1.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../models/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../models/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo',\n        {\n          'TodoInfo--completed': todo.completed,\n        })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../models/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map(todo => {\n          return (\n            <TodoInfo\n              key={todo.id}\n              todo={todo}\n            />\n          );\n        })\n      }\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../models/User';\nimport usersFromServer from '../api/users';\nimport { Todo } from '../models/Todo';\n\nexport const getUserById = (userId: number):User | null => {\n  return usersFromServer.find(user => user.id === userId) || null;\n};\n\nexport function getNewTodoId(todos: Todo[]): number {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n","import './App.scss';\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './models/Todo';\nimport { getNewTodoId, getUserById } from './services/user.service';\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todos);\n\n  const [title, setTitle] = useState<string>('');\n  const [titleError, setTitleError] = useState<boolean>(false);\n\n  const [selectedUserId, setSelectedUserId] = useState<number>(0);\n  const [userIdError, setUserIdError] = useState<boolean>(false);\n\n  const handleTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserIdChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setUserIdError(false);\n  };\n\n  const addTodo = (newTodo: Todo) => {\n    setVisibleTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setSelectedUserId(0);\n\n    setUserIdError(false);\n    setTitleError(false);\n  };\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setUserIdError(!selectedUserId);\n    setTitleError(!title);\n\n    if (!title || !selectedUserId) {\n      return;\n    }\n\n    addTodo({\n      title,\n      id: getNewTodoId(visibleTodos),\n      completed: false,\n      userId: selectedUserId,\n      user: getUserById(+selectedUserId),\n    });\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n            placeholder=\"Enter a title\"\n          />\n          {\n            titleError && (\n              <span className=\"error\">Please enter a title</span>\n            )\n          }\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {\n              usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>{user.name}</option>\n              ))\n            }\n          </select>\n          {\n            userIdError && (\n              <span className=\"error\">Please choose a user</span>\n            )\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}